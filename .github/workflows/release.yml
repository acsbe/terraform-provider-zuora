name: Release Terraform Provider

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get current version
        id: version
        run: |
          CURRENT_VERSION=$(git tag --sort=version:refname | tail -n 1)
          echo "Current version: $CURRENT_VERSION"
          if [[ "$CURRENT_VERSION" == "" ]]; then
            CURRENT_VERSION="v0.0.0"
          fi
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print "v"$1"."$2"."$3+1}')
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Set environment variable
        run: echo "VERSION=${{ steps.version.outputs.version }}" >> $GITHUB_ENV

      - name: Build for multiple platforms
        run: |
          mkdir -p dist
          for GOOS in linux darwin windows; do
            for GOARCH in amd64 arm64; do
              BIN_NAME="terraform-provider-myprovider_${GOOS}_${GOARCH}"
              [ "$GOOS" = "windows" ] && BIN_NAME="${BIN_NAME}.exe"
              GOOS=$GOOS GOARCH=$GOARCH go build -o dist/$BIN_NAME
            done
          done

      - name: Create Git tag and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $VERSION
          git push origin $VERSION

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: dist/*
